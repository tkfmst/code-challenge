/// 389. Find the Difference
/// Easy
///
/// You are given two strings s and t.
///
/// String t is generated by random shuffling string s and then add one more letter at a random position.
///
/// Return the letter that was added to t.
///
///
/// Example 1:
///
/// Input: s = "abcd", t = "abcde"
/// Output: "e"
/// Explanation: 'e' is the letter that was added.
///
/// Example 2:
///
/// Input: s = "", t = "y"
/// Output: "y"
///
///
/// Constraints:
///
/// * 0 <= s.length <= 1000
/// * t.length == s.length + 1
/// * s and t consist of lowercase English letters.

pub struct Solution {}

impl Solution {
    pub fn find_the_difference(s: String, t: String) -> char {
        // // answer 1
        // // O( s.len() * log(s.len()) + t.len() * log(t.len()) + s.len() )
        //
        // let mut sc = s.chars().collect::<Vec<char>>();
        // sc.sort();
        //
        // let mut tc = t.chars().collect::<Vec<char>>();
        // tc.sort();
        //
        // for i in 0..s.len() {
        //     if sc[i] != tc[i] {
        //         return tc[i];
        //     }
        // }
        //
        // *tc.last().unwrap()

        // answer 2
        // O( s.len() + t.len() + (s.len() + t.len()) ) = O(2*s.len() + 2*t.len())
        let mut exists: [u16; 26] = [0; 26];

        for &b in s.as_bytes() {
            exists[(b - b'a') as usize] += 1;
        }
        for &b in t.as_bytes() {
            exists[(b - b'a') as usize] += 1;
        }

        for (i, n) in exists.iter().enumerate() {
            if n % 2 == 1 {
                return (i as u8 + b'a') as char;
            }
        }
        panic!("Invalid s:`{}` & t: `{}`", s, t);
    }
}

#[cfg(test)]
mod tests {
    use super::Solution;

    #[test]
    fn test_find_the_difference_1() {
        let s = "abcd".to_string();
        let t = "abcde".to_string();
        let output = 'e';

        assert_eq!(Solution::find_the_difference(s, t), output);
    }

    #[test]
    fn test_find_the_difference_2() {
        let s = "".to_string();
        let t = "y".to_string();
        let output = 'y';

        assert_eq!(Solution::find_the_difference(s, t), output);
    }
}
